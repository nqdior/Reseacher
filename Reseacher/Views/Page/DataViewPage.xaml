<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:avalon="http://icsharpcode.net/sharpdevelop/avalonedit"
             xmlns:Mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"       
             x:Class="Reseacher.DataViewPage"
             Background="{DynamicResource ThemeBrushKey}"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style x:Key="pgr-normal" TargetType="{x:Type Mah:ProgressRing}">
            <Setter Property="Foreground" Value="#33adff" />
            <Setter Property="IsActive" Value="False" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Height" Value="100" />
            <Setter Property="Panel.ZIndex" Value="100" />
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Controls:TextBoxHelper.ClearTextButton" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Controls:TextBoxHelper.HasText), Mode=OneWay}" />
            <Setter Property="Controls:TextBoxHelper.UseFloatingWatermark" Value="True" />
            <Setter Property="Controls:TextBoxHelper.WatermarkAlignment" Value="Right" />
            <Setter Property="FontFamily" Value="Arial" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="4"/>
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <Mah:ProgressRing x:Name="loading_image" Style="{StaticResource pgr-normal}" Grid.RowSpan="3" Grid.ColumnSpan="4"/>
        
        <Grid Grid.Row="0" Margin="0,0,0,5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="150" />
            </Grid.ColumnDefinitions>
            <TextBox x:Name="tabNameText"
                     HorizontalAlignment="Left"
                     Width="Auto"
                     Grid.Column="0"
                     FontSize="12"
                     FontFamily="Segoe UI"
                     Controls:TextBoxHelper.Watermark="タブ名称"/>
            <ComboBox x:Name="serverComboBox"
                      ItemsSource="{Binding ServerItems, Mode=OneWay}"
                      Grid.Column="1"
                      DisplayMemberPath="Name"
                      FontFamily="Segoe UI"
                      Controls:TextBoxHelper.UseFloatingWatermark="True"
                      Controls:TextBoxHelper.Watermark="サーバー"
                      Controls:TextBoxHelper.WatermarkAlignment="Right"/>
        </Grid>
        
        
        <DataGrid x:Name="dataGrid"
                  Grid.Row="1"
                  AutoGenerateColumns="True"
                  ItemsSource="{Binding}"
                  FontSize="12"
                  Background="Transparent"
                  RowHeaderWidth="0"
                  Padding="5, 0, 5, 0"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Recycling"
                  EnableRowVirtualization="True"
                  EnableColumnVirtualization="True"
                  AlternationCount="2">
            <DataGrid.Resources>
                
                <Style TargetType="{x:Type DataGrid}">
                    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrushKey}" />
                    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BorderBrushKey}" />
                </Style>

                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource BorderBrushKey}" />
                    <Setter Property="BorderThickness" Value="0,0,.99,.99" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style TargetType="{x:Type DataGridRowHeader}">
                    <Setter Property="Visibility" Value="Hidden"/>
                    <!--
                    <Setter Property="Width" Value="25" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
                        </Trigger>
                    </Style.Triggers>
                    -->
                </Style>

                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Height" Value="25" />
                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="{DynamicResource SemiactiveBackgroundBrushKey}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
                
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" Margin="3" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                
                <Style TargetType="{x:Type Button}" x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderBrush" Value="Transparent" />
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ActiveBackgroundBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrushKey}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AccentBrushKey}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrushKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrushKey}" />
                        </Trigger>
                    </Style.Triggers>
                </Style>

            </DataGrid.Resources>
        </DataGrid>        
        
        <GridSplitter Grid.Row="2" 
                      Grid.Column="2" 
                      HorizontalAlignment="Stretch" 
                      Background="{DynamicResource ThemeBrushKey}" />
        <avalon:TextEditor x:Name="Editor"
                           Grid.Row="3"
                           Background="#1E1E1E"
                           Foreground="#D4D4D4"
                           FontFamily="Consolas"
                           FontSize="12"
                           Padding="10"
                           ShowLineNumbers="True"
                           KeyDown="Editor_KeyDown"/>
    </Grid>
</UserControl>
